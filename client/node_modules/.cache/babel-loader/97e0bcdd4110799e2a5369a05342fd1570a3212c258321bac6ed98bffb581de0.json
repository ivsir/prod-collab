{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/risvitareq/code/CodeCollabNew/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{gql}from'@apollo/client';export var QUERY_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query user($username: String!) {\\n    user(username: $username) {\\n      _id\\n      username\\n      email\\n      projects {\\n        _id\\n        projectTitle\\n        projectDescription\\n        createdAt\\n      }\\n    }\\n  }\\n\"])));export var QUERY_PROJECTS=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  query getProjects {\\n    projects {\\n      _id\\n      projectTitle\\n      projectDescription\\n      projectAuthor\\n      createdAt\\n      projectMembers {\\n        _id\\n        memberUsername\\n        memberId\\n      }\\n    }\\n  }\\n\"])));export var QUERY_SINGLE_PROJECT=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  query getSingleProject($projectId: ID!) {\\n    project(projectId: $projectId) {\\n      _id\\n      projectTitle\\n      projectDescription\\n      projectAuthor\\n      createdAt\\n      comments {\\n        _id\\n        commentText\\n        commentAuthor\\n        createdAt\\n      }\\n    }\\n  }\\n\"])));export var QUERY_ME=gql(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  query me {\\n    me {\\n      _id\\n      username\\n      email\\n      projects {\\n        _id\\n        projectTitle\\n        projectText\\n        projectAuthor\\n        createdAt\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"names":["gql","QUERY_USER","_templateObject","_taggedTemplateLiteral","QUERY_PROJECTS","_templateObject2","QUERY_SINGLE_PROJECT","_templateObject3","QUERY_ME","_templateObject4"],"sources":["/Users/risvitareq/code/CodeCollabNew/client/src/utils/queries.js"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      projects {\n        _id\n        projectTitle\n        projectDescription\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_PROJECTS = gql`\n  query getProjects {\n    projects {\n      _id\n      projectTitle\n      projectDescription\n      projectAuthor\n      createdAt\n      projectMembers {\n        _id\n        memberUsername\n        memberId\n      }\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_PROJECT = gql`\n  query getSingleProject($projectId: ID!) {\n    project(projectId: $projectId) {\n      _id\n      projectTitle\n      projectDescription\n      projectAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      projects {\n        _id\n        projectTitle\n        projectText\n        projectAuthor\n        createdAt\n      }\n    }\n  }\n`;"],"mappings":"wNAAA,OAASA,GAAG,KAAQ,gBAAgB,CAEpC,MAAO,IAAM,CAAAC,UAAU,CAAGD,GAAG,CAAAE,eAAA,GAAAA,eAAA,CAAAC,sBAAA,gPAc5B,CAED,MAAO,IAAM,CAAAC,cAAc,CAAGJ,GAAG,CAAAK,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,oPAehC,CAED,MAAO,IAAM,CAAAG,oBAAoB,CAAGN,GAAG,CAAAO,gBAAA,GAAAA,gBAAA,CAAAJ,sBAAA,+SAgBtC,CAED,MAAO,IAAM,CAAAK,QAAQ,CAAGR,GAAG,CAAAS,gBAAA,GAAAA,gBAAA,CAAAN,sBAAA,mNAe1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}