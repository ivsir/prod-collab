{"ast":null,"code":"var _jsxFileName = \"/Users/risvitareq/code/prod-collab2/client/src/components/accountBox/SignupForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../../utils/mutations\";\nimport AuthService from \"../../utils/auth\";\nimport { AccountContext } from \"../../components/accountBox/AccountContext\";\nimport { BoldLink, BoxContainer, LoginContainer, FormContainer, InputContainer, Input, MutedLink, ButtonContainer, SubmitButton } from \"../accountBox/Common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SignupForm() {\n  _s();\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [addUser, {\n    error,\n    data\n  }] = useMutation(ADD_USER);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(name, value, formState);\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    console.log(`This is the formstate: ${formState}`);\n    try {\n      const {\n        data\n      } = await addUser({\n        variables: {\n          ...formState\n        }\n      });\n      AuthService.login(data.addUser.token);\n      console.log(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // Function to create an S3 bucket for a new user\n  async function createS3BucketForUser(username) {\n    try {\n      // Generate a unique bucket name, e.g., based on the username\n      const bucketName = `user-${username.toLowerCase()}-bucket`;\n\n      // Create the S3 bucket\n      await s3.createBucket({\n        Bucket: bucketName\n      }).promise();\n\n      // Store the bucket name in the user's schema\n      const user = new User({\n        username,\n        s3BucketName: bucketName\n      });\n      await user.save();\n      console.log(`S3 bucket created for user ${username}: ${bucketName}`);\n    } catch (error) {\n      console.error('Error creating S3 bucket:', error);\n    }\n  }\n\n  // Example usage: Create an S3 bucket for a new user\n  createS3BucketForUser('john_doe');\n\n  //\n  const {\n    switchToSignin\n  } = useContext(AccountContext);\n  return /*#__PURE__*/_jsxDEV(BoxContainer, {\n    children: /*#__PURE__*/_jsxDEV(LoginContainer, {\n      id: \"signup-container\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"signup-input1\",\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          value: formState.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"signup-input2\",\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          value: formState.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"signup-input3\",\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: formState.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n          id: \"signup-button\",\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MutedLink, {\n        id: \"muted-link\",\n        href: \"#\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(BoldLink, {\n          id: \"bold\",\n          href: \"#\",\n          onClick: switchToSignin,\n          children: [\"Sign In\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupForm, \"fBXLS68oiIx0UNp+0BjKspDHzJA=\", false, function () {\n  return [useMutation];\n});\n_c = SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["useState","useContext","Link","useMutation","ADD_USER","AuthService","AccountContext","BoldLink","BoxContainer","LoginContainer","FormContainer","InputContainer","Input","MutedLink","ButtonContainer","SubmitButton","jsxDEV","_jsxDEV","SignupForm","_s","formState","setFormState","username","email","password","addUser","error","data","handleChange","event","name","value","target","console","log","handleFormSubmit","preventDefault","variables","login","token","e","createS3BucketForUser","bucketName","toLowerCase","s3","createBucket","Bucket","promise","user","User","s3BucketName","save","switchToSignin","children","id","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","_c","$RefreshReg$"],"sources":["/Users/risvitareq/code/prod-collab2/client/src/components/accountBox/SignupForm.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../../utils/mutations\";\n\nimport AuthService from \"../../utils/auth\";\n\nimport { AccountContext } from \"../../components/accountBox/AccountContext\";\n\nimport {\n  BoldLink,\n  BoxContainer,\n  LoginContainer,\n  FormContainer,\n  InputContainer,\n  Input,\n  MutedLink,\n  ButtonContainer,\n  SubmitButton,\n} from \"../accountBox/Common\";\n\nexport function SignupForm() {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(name, value, formState);\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(`This is the formstate: ${formState}`);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n      AuthService.login(data.addUser.token);\n      console.log(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // Function to create an S3 bucket for a new user\nasync function createS3BucketForUser(username) {\n  try {\n    // Generate a unique bucket name, e.g., based on the username\n    const bucketName = `user-${username.toLowerCase()}-bucket`;\n\n    // Create the S3 bucket\n    await s3.createBucket({ Bucket: bucketName }).promise();\n\n    // Store the bucket name in the user's schema\n    const user = new User({ username, s3BucketName: bucketName });\n    await user.save();\n\n    console.log(`S3 bucket created for user ${username}: ${bucketName}`);\n  } catch (error) {\n    console.error('Error creating S3 bucket:', error);\n  }\n}\n\n// Example usage: Create an S3 bucket for a new user\ncreateS3BucketForUser('john_doe');\n\n  //\n  const { switchToSignin } = useContext(AccountContext);\n\n  return (\n    <BoxContainer>\n      <LoginContainer id=\"signup-container\" onSubmit={handleFormSubmit}>\n        <InputContainer>\n          <Input\n            id=\"signup-input1\"\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            value={formState.username}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <InputContainer>\n          <Input\n            id=\"signup-input2\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={formState.email}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <InputContainer>\n          <Input\n            id=\"signup-input3\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={formState.password}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <ButtonContainer>\n          <SubmitButton id=\"signup-button\" type=\"submit\">\n            Sign Up\n          </SubmitButton>\n        </ButtonContainer>\n        <MutedLink id=\"muted-link\" href=\"#\">\n          Already have an account?\n          <BoldLink id=\"bold\" href=\"#\" onClick={switchToSignin}>\n            Sign In{\" \"}\n          </BoldLink>\n        </MutedLink>\n      </LoginContainer>\n    </BoxContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}