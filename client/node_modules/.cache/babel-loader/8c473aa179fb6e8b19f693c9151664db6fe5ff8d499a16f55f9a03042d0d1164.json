{"ast":null,"code":"import { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\nexport function transformToString(payload) {\n  let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"utf-8\";\n  if (encoding === \"base64\") {\n    return toBase64(payload);\n  }\n  return toUtf8(payload);\n}\nexport function transformFromString(str, encoding) {\n  if (encoding === \"base64\") {\n    return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n  }\n  return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\n}","map":{"version":3,"names":["fromBase64","toBase64","fromUtf8","toUtf8","Uint8ArrayBlobAdapter","transformToString","payload","encoding","arguments","length","undefined","transformFromString","str","mutate"],"sources":["/Users/risvitareq/code/prod-collab2/client/node_modules/@smithy/util-stream/dist-es/blob/transforms.js"],"sourcesContent":["import { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\nexport function transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return toBase64(payload);\n    }\n    return toUtf8(payload);\n}\nexport function transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,qBAAqB;AAC1D,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACpD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAsB;EAAA,IAApBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;EACzD,IAAID,QAAQ,KAAK,QAAQ,EAAE;IACvB,OAAON,QAAQ,CAACK,OAAO,CAAC;EAC5B;EACA,OAAOH,MAAM,CAACG,OAAO,CAAC;AAC1B;AACA,OAAO,SAASK,mBAAmBA,CAACC,GAAG,EAAEL,QAAQ,EAAE;EAC/C,IAAIA,QAAQ,KAAK,QAAQ,EAAE;IACvB,OAAOH,qBAAqB,CAACS,MAAM,CAACb,UAAU,CAACY,GAAG,CAAC,CAAC;EACxD;EACA,OAAOR,qBAAqB,CAACS,MAAM,CAACX,QAAQ,CAACU,GAAG,CAAC,CAAC;AACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}