{"ast":null,"code":"import { S3Client, CreateBucketCommand } from \"@aws-sdk/client-s3\";\nconst s3Client = new S3Client({\n  region: \"us-west-1\"\n}); // Replace \"your-region\" with your AWS region\n\nasync function createS3Bucket(userId) {\n  const bucketName = `user-${userId}-bucket`; // You can customize the bucket naming\n  try {\n    const createBucketParams = {\n      Bucket: bucketName\n    };\n    await s3Client.send(new CreateBucketCommand(createBucketParams));\n    return bucketName;\n  } catch (error) {\n    console.error(\"Error creating S3 bucket:\", error);\n    throw error;\n  }\n}\nexport { createS3Bucket };","map":{"version":3,"names":["S3Client","CreateBucketCommand","s3Client","region","createS3Bucket","userId","bucketName","createBucketParams","Bucket","send","error","console"],"sources":["/Users/risvitareq/code/prod-collab2/client/src/utils/aws.js"],"sourcesContent":["import { S3Client, CreateBucketCommand } from \"@aws-sdk/client-s3\";\n\nconst s3Client = new S3Client({ region: \"us-west-1\" }); // Replace \"your-region\" with your AWS region\n\nasync function createS3Bucket(userId) {\n  const bucketName = `user-${userId}-bucket`; // You can customize the bucket naming\n  try {\n    const createBucketParams = {\n      Bucket: bucketName,\n    };\n\n    await s3Client.send(new CreateBucketCommand(createBucketParams));\n    return bucketName;\n  } catch (error) {\n    console.error(\"Error creating S3 bucket:\", error);\n    throw error;\n  }\n}\n\nexport { createS3Bucket };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,mBAAmB,QAAQ,oBAAoB;AAElE,MAAMC,QAAQ,GAAG,IAAIF,QAAQ,CAAC;EAAEG,MAAM,EAAE;AAAY,CAAC,CAAC,CAAC,CAAC;;AAExD,eAAeC,cAAcA,CAACC,MAAM,EAAE;EACpC,MAAMC,UAAU,GAAI,QAAOD,MAAO,SAAQ,CAAC,CAAC;EAC5C,IAAI;IACF,MAAME,kBAAkB,GAAG;MACzBC,MAAM,EAAEF;IACV,CAAC;IAED,MAAMJ,QAAQ,CAACO,IAAI,CAAC,IAAIR,mBAAmB,CAACM,kBAAkB,CAAC,CAAC;IAChE,OAAOD,UAAU;EACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF;AAEA,SAASN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}