{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport AuthService from \"../utils/auth\";\nimport { QUERY_USER } from \"../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\nconst baseURL = process.env.REACT_APP_API_URL;\nfunction UserProfile() {\n  _s();\n  const {\n    loading,\n    data: userData\n  } = useQuery(QUERY_USER, {\n    variables: {\n      username: AuthService.getUsername()\n    }\n  });\n  const user = (userData === null || userData === void 0 ? void 0 : userData.user) || {}; // Assuming userData contains user data with an ID property\n\n  console.log(user);\n\n  // Create axiosClient with user ID in headers\n  const axiosClient = axios.create({\n    baseURL,\n    headers: {\n      \"x-user-id\": user.id // Assuming user.id contains the user's ID\n    }\n  });\n\n  // Now you can use the axiosClient to make API requests with the user's ID\n  axiosClient.get(\"/your-endpoint\").then(response => {\n    console.log(response.data);\n  });\n  return user;\n}\n_s(UserProfile, \"2OxuRLaSOknTJVKJEgXF6K0a+sA=\", false, function () {\n  return [useQuery];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["axios","AuthService","QUERY_USER","useQuery","baseURL","process","env","REACT_APP_API_URL","UserProfile","_s","loading","data","userData","variables","username","getUsername","user","console","log","axiosClient","create","headers","id","get","then","response","_c","$RefreshReg$"],"sources":["/Users/risvitareq/code/prod-collab2/client/src/config/user.js"],"sourcesContent":["import axios from \"axios\";\nimport AuthService from \"../utils/auth\";\nimport { QUERY_USER } from \"../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nfunction UserProfile() {\n  const { loading, data: userData } = useQuery(QUERY_USER, {\n    variables: { username: AuthService.getUsername() },\n  });\n\n  const user = userData?.user || {}; // Assuming userData contains user data with an ID property\n\n  console.log(user);\n\n  // Create axiosClient with user ID in headers\n  const axiosClient = axios.create({\n    baseURL,\n    headers: {\n      \"x-user-id\": user.id, // Assuming user.id contains the user's ID\n    },\n  });\n\n  // Now you can use the axiosClient to make API requests with the user's ID\n  axiosClient.get(\"/your-endpoint\").then((response) => {\n    console.log(response.data);\n  });\n\n  return user;\n}\n\nexport default UserProfile;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC,OAAO;IAAEC,IAAI,EAAEC;EAAS,CAAC,GAAGT,QAAQ,CAACD,UAAU,EAAE;IACvDW,SAAS,EAAE;MAAEC,QAAQ,EAAEb,WAAW,CAACc,WAAW;IAAG;EACnD,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,CAAAJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,IAAI,KAAI,CAAC,CAAC,CAAC,CAAC;;EAEnCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;;EAEjB;EACA,MAAMG,WAAW,GAAGnB,KAAK,CAACoB,MAAM,CAAC;IAC/BhB,OAAO;IACPiB,OAAO,EAAE;MACP,WAAW,EAAEL,IAAI,CAACM,EAAE,CAAE;IACxB;EACF,CAAC,CAAC;;EAEF;EACAH,WAAW,CAACI,GAAG,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;IACnDR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAACd,IAAI,CAAC;EAC5B,CAAC,CAAC;EAEF,OAAOK,IAAI;AACb;AAACP,EAAA,CAvBQD,WAAW;EAAA,QACkBL,QAAQ;AAAA;AAAAuB,EAAA,GADrClB,WAAW;AAyBpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}