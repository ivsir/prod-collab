{"ast":null,"code":"var _jsxFileName = \"/Users/risvitareq/code/prod-collab2/client/src/components/accountBox/SignupForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER, ADD_FOLDER } from \"../../utils/mutations\";\nimport AuthService from \"../../utils/auth\";\nimport axios from \"axios\";\n\n// import { createS3Bucket } from \"../../utils/aws\"; // Import your S3 library\n\nimport { AccountContext } from \"../../components/accountBox/AccountContext\";\nimport { BoldLink, BoxContainer, LoginContainer, FormContainer, InputContainer, Input, MutedLink, ButtonContainer, SubmitButton } from \"../accountBox/Common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = process.env.REACT_APP_API_URL;\nfunction generateRandomFolderName(length) {\n  const charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let folderName = \"\";\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * charset.length);\n    folderName += charset.charAt(randomIndex);\n  }\n  return folderName;\n}\nexport function SignupForm() {\n  _s();\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [addUser] = useMutation(ADD_USER);\n  const [addFolder] = useMutation(ADD_FOLDER);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const {\n        data\n      } = await addUser({\n        variables: {\n          ...formState\n        }\n      });\n      const userId = data.addUser.user._id; // Assuming your response has the user's ID\n      console.log(\"User ID:\", userId);\n      const folderName = generateRandomFolderName(12);\n      const response = await axios.post(`${baseURL}/create-s3-folder`, {\n        userId,\n        folderName: folderName\n      });\n      console.log(\"S3 Folder Creation Response:\", response);\n      if (response.status === 200) {\n        const addFolderResponse = await addFolder({\n          variables: {\n            userId: userId,\n            folderfolderName\n          }\n        });\n        console.log(\"Add Folder Mutation Response:\", addFolderResponse);\n        AuthService.login(data.addUser.token);\n        console.log(\"UserToken:\", data.addUser.token);\n      } else {\n        console.error(\"Failed to create folder:\", response.data.error);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  //\n  const {\n    switchToSignin\n  } = useContext(AccountContext);\n  return /*#__PURE__*/_jsxDEV(BoxContainer, {\n    children: /*#__PURE__*/_jsxDEV(LoginContainer, {\n      id: \"signup-container\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"signup-input1\",\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          value: formState.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"signup-input2\",\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          value: formState.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"signup-input3\",\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: formState.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n          id: \"signup-button\",\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MutedLink, {\n        id: \"muted-link\",\n        href: \"#\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(BoldLink, {\n          id: \"bold\",\n          href: \"#\",\n          onClick: switchToSignin,\n          children: [\"Sign In\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupForm, \"am7UPUIm3c+jsRfff0bvOMq+7t4=\", false, function () {\n  return [useMutation, useMutation];\n});\n_c = SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["useState","useContext","Link","useMutation","ADD_USER","ADD_FOLDER","AuthService","axios","AccountContext","BoldLink","BoxContainer","LoginContainer","FormContainer","InputContainer","Input","MutedLink","ButtonContainer","SubmitButton","jsxDEV","_jsxDEV","baseURL","process","env","REACT_APP_API_URL","generateRandomFolderName","length","charset","folderName","i","randomIndex","Math","floor","random","charAt","SignupForm","_s","formState","setFormState","username","email","password","addUser","addFolder","handleChange","event","name","value","target","handleFormSubmit","preventDefault","data","variables","userId","user","_id","console","log","response","post","status","addFolderResponse","folderfolderName","login","token","error","e","switchToSignin","children","id","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","_c","$RefreshReg$"],"sources":["/Users/risvitareq/code/prod-collab2/client/src/components/accountBox/SignupForm.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER, ADD_FOLDER } from \"../../utils/mutations\";\nimport AuthService from \"../../utils/auth\";\nimport axios from \"axios\";\n\n// import { createS3Bucket } from \"../../utils/aws\"; // Import your S3 library\n\nimport { AccountContext } from \"../../components/accountBox/AccountContext\";\n\nimport {\n  BoldLink,\n  BoxContainer,\n  LoginContainer,\n  FormContainer,\n  InputContainer,\n  Input,\n  MutedLink,\n  ButtonContainer,\n  SubmitButton,\n} from \"../accountBox/Common\";\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nfunction generateRandomFolderName(length) {\n  const charset =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let folderName = \"\";\n\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * charset.length);\n    folderName += charset.charAt(randomIndex);\n  }\n\n  return folderName;\n}\n\nexport function SignupForm() {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [addUser] = useMutation(ADD_USER);\n  const [addFolder] = useMutation(ADD_FOLDER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      const userId = data.addUser.user._id; // Assuming your response has the user's ID\n      console.log(\"User ID:\", userId);\n      const folderName = generateRandomFolderName(12);\n\n      const response = await axios.post(`${baseURL}/create-s3-folder`, {\n        userId,\n        folderName: folderName,\n      });\n      console.log(\"S3 Folder Creation Response:\", response);\n\n      if (response.status === 200) {\n        const addFolderResponse = await addFolder({\n          variables: { userId: userId, folderfolderName},\n        });\n        console.log(\"Add Folder Mutation Response:\", addFolderResponse);\n\n        AuthService.login(data.addUser.token);\n        console.log(\"UserToken:\", data.addUser.token);\n      } else {\n        console.error(\"Failed to create folder:\", response.data.error);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  //\n  const { switchToSignin } = useContext(AccountContext);\n\n  return (\n    <BoxContainer>\n      <LoginContainer id=\"signup-container\" onSubmit={handleFormSubmit}>\n        <InputContainer>\n          <Input\n            id=\"signup-input1\"\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            value={formState.username}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <InputContainer>\n          <Input\n            id=\"signup-input2\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={formState.email}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <InputContainer>\n          <Input\n            id=\"signup-input3\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={formState.password}\n            onChange={handleChange}\n          />\n        </InputContainer>\n        <ButtonContainer>\n          <SubmitButton id=\"signup-button\" type=\"submit\">\n            Sign Up\n          </SubmitButton>\n        </ButtonContainer>\n        <MutedLink id=\"muted-link\" href=\"#\">\n          Already have an account?\n          <BoldLink id=\"bold\" href=\"#\" onClick={switchToSignin}>\n            Sign In{\" \"}\n          </BoldLink>\n        </MutedLink>\n      </LoginContainer>\n    </BoxContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}