{"ast":null,"code":"import { SignatureV4 } from \"@smithy/signature-v4\";\nimport { loadCrt } from \"./load-crt\";\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\nexport class SignatureV4MultiRegion {\n  constructor(options) {\n    this.sigv4Signer = new SignatureV4(options);\n    this.signerOptions = options;\n  }\n  async sign(requestToSign) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().sign(requestToSign, options);\n    }\n    return this.sigv4Signer.sign(requestToSign, options);\n  }\n  async presign(originalRequest) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().presign(originalRequest, options);\n    }\n    return this.sigv4Signer.presign(originalRequest, options);\n  }\n  getSigv4aSigner() {\n    if (!this.sigv4aSigner) {\n      let CrtSignerV4 = null;\n      try {\n        loadCrt();\n        CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n        if (typeof CrtSignerV4 !== \"function\") throw new Error();\n      } catch (e) {\n        e.message = `${e.message}\\nPlease check if you have installed \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` + \"For more information please go to \" + \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n        throw e;\n      }\n      this.sigv4aSigner = new CrtSignerV4({\n        ...this.signerOptions,\n        signingAlgorithm: 1\n      });\n    }\n    return this.sigv4aSigner;\n  }\n}","map":{"version":3,"names":["SignatureV4","loadCrt","signatureV4CrtContainer","SignatureV4MultiRegion","constructor","options","sigv4Signer","signerOptions","sign","requestToSign","arguments","length","undefined","signingRegion","runtime","Error","getSigv4aSigner","presign","originalRequest","sigv4aSigner","CrtSignerV4","e","message","signingAlgorithm"],"sources":["/Users/risvitareq/code/prod-collab2/client/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js"],"sourcesContent":["import { SignatureV4 } from \"@smithy/signature-v4\";\nimport { loadCrt } from \"./load-crt\";\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\nexport class SignatureV4MultiRegion {\n    constructor(options) {\n        this.sigv4Signer = new SignatureV4(options);\n        this.signerOptions = options;\n    }\n    async sign(requestToSign, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().sign(requestToSign, options);\n        }\n        return this.sigv4Signer.sign(requestToSign, options);\n    }\n    async presign(originalRequest, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().presign(originalRequest, options);\n        }\n        return this.sigv4Signer.presign(originalRequest, options);\n    }\n    getSigv4aSigner() {\n        if (!this.sigv4aSigner) {\n            let CrtSignerV4 = null;\n            try {\n                loadCrt();\n                CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n                if (typeof CrtSignerV4 !== \"function\")\n                    throw new Error();\n            }\n            catch (e) {\n                e.message =\n                    `${e.message}\\nPlease check if you have installed \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n                throw e;\n            }\n            this.sigv4aSigner = new CrtSignerV4({\n                ...this.signerOptions,\n                signingAlgorithm: 1,\n            });\n        }\n        return this.sigv4aSigner;\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,uBAAuB,QAAQ,8BAA8B;AACtE,OAAO,MAAMC,sBAAsB,CAAC;EAChCC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,WAAW,GAAG,IAAIN,WAAW,CAACK,OAAO,CAAC;IAC3C,IAAI,CAACE,aAAa,GAAGF,OAAO;EAChC;EACA,MAAMG,IAAIA,CAACC,aAAa,EAAgB;IAAA,IAAdJ,OAAO,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAClC,IAAIL,OAAO,CAACQ,aAAa,KAAK,GAAG,EAAE;MAC/B,IAAI,IAAI,CAACN,aAAa,CAACO,OAAO,KAAK,MAAM,EACrC,MAAM,IAAIC,KAAK,CAAC,8FAA8F,CAAC;MACnH,OAAO,IAAI,CAACC,eAAe,EAAE,CAACR,IAAI,CAACC,aAAa,EAAEJ,OAAO,CAAC;IAC9D;IACA,OAAO,IAAI,CAACC,WAAW,CAACE,IAAI,CAACC,aAAa,EAAEJ,OAAO,CAAC;EACxD;EACA,MAAMY,OAAOA,CAACC,eAAe,EAAgB;IAAA,IAAdb,OAAO,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACvC,IAAIL,OAAO,CAACQ,aAAa,KAAK,GAAG,EAAE;MAC/B,IAAI,IAAI,CAACN,aAAa,CAACO,OAAO,KAAK,MAAM,EACrC,MAAM,IAAIC,KAAK,CAAC,8FAA8F,CAAC;MACnH,OAAO,IAAI,CAACC,eAAe,EAAE,CAACC,OAAO,CAACC,eAAe,EAAEb,OAAO,CAAC;IACnE;IACA,OAAO,IAAI,CAACC,WAAW,CAACW,OAAO,CAACC,eAAe,EAAEb,OAAO,CAAC;EAC7D;EACAW,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;MACpB,IAAIC,WAAW,GAAG,IAAI;MACtB,IAAI;QACAnB,OAAO,EAAE;QACTmB,WAAW,GAAGlB,uBAAuB,CAACkB,WAAW;QACjD,IAAI,OAAOA,WAAW,KAAK,UAAU,EACjC,MAAM,IAAIL,KAAK,EAAE;MACzB,CAAC,CACD,OAAOM,CAAC,EAAE;QACNA,CAAC,CAACC,OAAO,GACJ,GAAED,CAAC,CAACC,OAAQ,yFAAwF,GACjG,oCAAoC,GACpC,qFAAqF;QAC7F,MAAMD,CAAC;MACX;MACA,IAAI,CAACF,YAAY,GAAG,IAAIC,WAAW,CAAC;QAChC,GAAG,IAAI,CAACb,aAAa;QACrBgB,gBAAgB,EAAE;MACtB,CAAC,CAAC;IACN;IACA,OAAO,IAAI,CAACJ,YAAY;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}